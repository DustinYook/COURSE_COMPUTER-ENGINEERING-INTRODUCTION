# 프로그램 목적 : 파이썬에 대한 기초 이해
# 참고) 파이참은 자동저장 수행함

# 1) 문자열 출력하기
print("강아지" + "고양이")  # '+'는 연결연산 수행 -> 결과는 "강아지고양이"로 공백문자 미포함
print("강아지", "고양이")  # ','도 연결연산 수행 -> 결과는 "강아지 고양이"로 공백문자 포함 (주된 차이!)
print("=" * 50)

# 2) print 함수에 대한 심화내용
# print(self, *args, sep=' ', end='\n', file=None) : print 함수의 함수원형
print("강아지" + "고양이", end='')  # 줄바꿈을 하지 않음 -> 파이썬은 디폴트로 개행문자를 삽입함
print("강아지", "고양이", sep='@#$')  # 공백문자, 즉 separation할 때 사용하는 문자도 지정가능
print("=" * 50)

# 3) 디버깅 방법
# print(강아지)  # 이렇게 쓰면 구문오류발생
강아지 = "강아지"  # '강아지'라는 변수선언
print(강아지)  # '강아지'를 변수로 인식함 -> 상수 또는 변수만 인자로 받음
print("result =", 3*5)  # 이렇게 콤마를 통해 연결연산 수행가능
print("result =", 3*5, 'OK!')  # 이렇게 여러 개를  섞어 쓸 수 있다
# print("result =" + 3*5)  # 주의) 문자열은 문자열끼리만 연산가능 -> 뒤의 3 * 5를 문자열로 바꿔 주어야 함
print("result = " + str(3*5))  # 캐스팅으로 뒤의 것을 문자열로 바꾸어 주어야 함
print("--------------------------------------------------")  # 이거 불편
print("-" * 50)  # 파이썬에서는 내부 반목문으로 출력가능! - 자주 사용!
# print('=' + 50) # 문자열과 숫자의 산술연산은 불가 -> 위의 * 50은 곱셈연산이 아닌 반복연산 (연산자오버로딩)
# pront('ABC')  # 인터프리팅 언어라서 읽는 데 까지 읽고 오류가 중간에 섞여서 나오는 특징이 있음
# print(1+)  # syntax error -> 하이퍼링크를 누르면 오류가 발생한 지점으로 이동 가능

# 직접 해보기
print("9 * 8은", 9*8, "입니다");
# 세미콜론을 넣어도 오류없음 -> 파이썬에서는 안넣는 것이 원칙 (안넣어도 상관없으면 빼는게 맞음)